/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    conversations: Conversation;
    companies: Company;
    licenses: License;
    packages: Package;
    subscriptions: Subscription;
    billings: Billing;
  };
  globals: {};
}
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  roles?: ('admin' | 'user' | 'companyAdmin')[];
  company: string | Company;
  position?: string;
  department?: string;
  updatedAt: string;
  createdAt: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Company {
  id: string;
  name: string;
  address?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Conversation {
  id: string;
  title: string;
  messages: {
    role: 'human' | 'ai';
    content: string;
    id?: string;
  }[];
  isDeleted?: boolean;
  user: string | User;
  chatCacheUpdatedAt?: string;
  tokenUsage?: number;
  updatedAt: string;
  createdAt: string;
}
export interface License {
  id: string;
  company: string | Company;
  assignee?: string | User;
  expiredAt: string;
  tokenUsage?: number;
  tokenLimit?: number;
  isValid?: boolean;
  updatedAt: string;
  createdAt: string;
}
export interface Package {
  id: string;
  name: string;
  description?: string;
  price?: number;
  type?: 'add-on' | 'monthly' | 'quarterly' | 'yearly';
  licenseCount: number;
  tokenLimitPerLicense: number;
  updatedAt: string;
  createdAt: string;
}
export interface Subscription {
  id: string;
  user: string | User;
  package: string | Package;
  status: 'active' | 'suspended' | 'canceled';
  startDate: string;
  nextBillingDate?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Billing {
  id: string;
  user: string | User;
  price: number;
  paymentMethod: 'bank';
  status: 'paid' | 'failed';
  startDate: string;
  endDate: string;
  package: string | Package;
  packageSnapshot?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  subscription?: string | Subscription;
  subscriptionSnapshot?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
